package com.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FrameAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFrameAllPropertiesEquals(Frame expected, Frame actual) {
        assertFrameAutoGeneratedPropertiesEquals(expected, actual);
        assertFrameAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFrameAllUpdatablePropertiesEquals(Frame expected, Frame actual) {
        assertFrameUpdatableFieldsEquals(expected, actual);
        assertFrameUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFrameAutoGeneratedPropertiesEquals(Frame expected, Frame actual) {
        assertThat(expected)
            .as("Verify Frame auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFrameUpdatableFieldsEquals(Frame expected, Frame actual) {
        assertThat(expected)
            .as("Verify Frame relevant properties")
            .satisfies(e -> assertThat(e.getTitle()).as("check title").isEqualTo(actual.getTitle()))
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getGuidelineUrl()).as("check guidelineUrl").isEqualTo(actual.getGuidelineUrl()))
            .satisfies(e -> assertThat(e.getImagePath()).as("check imagePath").isEqualTo(actual.getImagePath()))
            .satisfies(e -> assertThat(e.getUsageCount()).as("check usageCount").isEqualTo(actual.getUsageCount()))
            .satisfies(e -> assertThat(e.getCreatedAt()).as("check createdAt").isEqualTo(actual.getCreatedAt()))
            .satisfies(e -> assertThat(e.getUpdatedAt()).as("check updatedAt").isEqualTo(actual.getUpdatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFrameUpdatableRelationshipsEquals(Frame expected, Frame actual) {
        // empty method
    }
}
